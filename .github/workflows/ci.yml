name: Github Actions CI Java Project

on :
  push:
    branches:
      - "Di"

jobs:
  scan-test-phase:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.scan-test-phase.outputs.APP_VERSION }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        
      - name: Set up JAVA JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Download and set up Maven
        run: |
          wget http://mirrors.estointernet.in/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz
          tar xzf "apache-maven-3.6.3-bin.tar.gz"
          export M2_HOME="$PWD/apache-maven-3.6.3"
          export PATH="$M2_HOME/bin:$PATH"

      - name: Run Maven tests
        run: |
          mvn --version
          mvn test

      - name: Run trivy fs check
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: '.'
          format: table
          exit-code: 0
          ignore-unfixed: true

      - name: Increamenting application version
        run : mvn build-helper:parse-version versions:set -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.nextMinorVersion}' versions:commit

      - name: Extract the new version
        run : |
          echo "APP_VERSION=$(grep -oPm2 '(?<=<version>)[^<]+' pom.xml | tail -n 1)" >> $GITHUB_ENV
          echo "::set-output name=APP_VERSION::$APP_VERSION"

      - name: Run maven package
        run: mvn clean package

      - name: Cache Maven build outputs
        uses: actions/cache@v3
        with:
          path: target/your-app.jar
          key: ${{ runner.os }}-maven-build-Di-${{ hashFiles('target/your-app.jar') }}
          restore-keys: |
            ${{ runner.os }}-maven-build-Di-

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Docker build & push
        run: |
          docker build -t ${{secrets.DOCKER_REPO}}/${{secrets.IMAGE_NAME}}:${{env.APP_VERSION}} .
          docker push ${{secrets.DOCKER_REPO}}/${{secrets.IMAGE_NAME}}:${{env.APP_VERSION}}

  update-manifest-file:
    needs: scan-test-phase
    runs-on: ubuntu-latest

    steps:
      - name: Checkout manifest repo
        uses: actions/checkout@v3
        with: 
          repository: MohamedAliGatri/ArgoCD-practice
          ref: main
          token: ${{secrets.GHA_ACCESS_KEY}}
      - name: Update manifest file
        run: |
          VERSION=$(grep -oP '(?<=gatrimohamedali/devops-project:)\d+\.\d+' deployment.yml)
          sed -i "s/${{secrets.DOCKER_REPO}}\/${{secrets.IMAGE_NAME}}:$VERSION/${{secrets.DOCKER_REPO}}\/${{secrets.IMAGE_NAME}}:${{needs.scan-test-phase.outputs.APP_VERSION}}/g" deployment.yml
      - name: Commit the version update
        run: |
          git config --global user.email "mohamedali.gatri@esprit.tn"  # Set email for commit
          git config --global user.name "MohamedAliGatri"
          git add deployment.yml
          git commit -m "Github actions: Update application version"
          git push origin main

     